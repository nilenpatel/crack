from flask import Flask, request, jsonify
import numpy as np
import tensorflow as tf
from PIL import Image
import io

app = Flask(__name__)

# Load your h5 model
MODEL_PATH = r"C:\Users\Nilen Patel\Desktop\wallcrack.h5"
model = tf.keras.models.load_model(MODEL_PATH)

def prepare_image(image_bytes):
    img = Image.open(io.BytesIO(image_bytes)).convert('RGB')
    img = img.resize((224, 224))  # Resize to model input size
    img_array = np.array(img) / 255.0  # Normalize if needed
    img_array = np.expand_dims(img_array, axis=0)
    return img_array

@app.route('/predict', methods=['POST'])
def predict():
    file = request.files['file']
    img_bytes = file.read()
    img_array = prepare_image(img_bytes)
    predictions = model.predict(img_array)
    # Assume binary classification, adjust as per your model
    result = "Crack Detected" if predictions[0][0] > 0.5 else "No Crack Detected"
    return result

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
